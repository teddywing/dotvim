let s:emoji = [
	\ '🌫',
	\ '💫',
	\ '👹',
	\ '👺',
	\ '👽',
	\ '👾',
	\ '🤖',
	\ '💌',
	\ '🔥',
	\ '💢',
	\ '💥',
	\ '💫',
	\ '💦',
	\ '💨',
	\ '🕳',
	\ '💬',
	\ '👁',
	\ '🗨',
	\ '🗨',
	\ '🗯',
	\ '💭',
	\ '🦿',
	\ '🧠',
	\ '🫀',
	\ '🫁',
	\ '🦷',
	\ '🦴',
	\ '👀',
	\ '👁',
	\ '🍳',
	\ '🔧',
	\ '💼',
	\ '🔬',
	\ '💻',
	\ '🎤',
	\ '🎨',
	\ '🚒',
	\ '🎄',
	\ '🧚',
	\ '🤺',
	\ '🏇',
	\ '🛀',
	\ '🛌',
	\ '👪',
	\ '🐵',
	\ '🐒',
	\ '🦍',
	\ '🦧',
	\ '🐶',
	\ '🐕',
	\ '🦮',
	\ '🐕',
	\ '🦺',
	\ '🐩',
	\ '🐺',
	\ '🦊',
	\ '🦝',
	\ '🐱',
	\ '🐈',
	\ '🦁',
	\ '🐯',
	\ '🐅',
	\ '🐆',
	\ '🐴',
	\ '🐎',
	\ '🦄',
	\ '🦓',
	\ '🦌',
	\ '🦬',
	\ '🐮',
	\ '🐂',
	\ '🐃',
	\ '🐄',
	\ '🐷',
	\ '🐖',
	\ '🐗',
	\ '🐽',
	\ '🐏',
	\ '🐐',
	\ '🐪',
	\ '🐫',
	\ '🦙',
	\ '🦒',
	\ '🐘',
	\ '🦣',
	\ '🦏',
	\ '🦛',
	\ '🐭',
	\ '🐁',
	\ '🐀',
	\ '🐹',
	\ '🐰',
	\ '🐇',
	\ '🐿',
	\ '🦫',
	\ '🦔',
	\ '🦇',
	\ '🐻',
	\ '❄',
	\ '🐨',
	\ '🐼',
	\ '🦥',
	\ '🦦',
	\ '🦨',
	\ '🦘',
	\ '🦡',
	\ '🦃',
	\ '🐔',
	\ '🐓',
	\ '🐣',
	\ '🐤',
	\ '🐥',
	\ '🐦',
	\ '🐧',
	\ '🕊',
	\ '🦅',
	\ '🦆',
	\ '🦢',
	\ '🦉',
	\ '🦤',
	\ '🪶',
	\ '🦩',
	\ '🦚',
	\ '🦜',
	\ '🐸',
	\ '🐊',
	\ '🐢',
	\ '🦎',
	\ '🐍',
	\ '🐲',
	\ '🐉',
	\ '🦕',
	\ '🦖',
	\ '🐳',
	\ '🐋',
	\ '🐬',
	\ '🦭',
	\ '🐟',
	\ '🐠',
	\ '🐡',
	\ '🦈',
	\ '🐙',
	\ '🐚',
	\ '🐌',
	\ '🦋',
	\ '🐛',
	\ '🐜',
	\ '🐝',
	\ '🪲',
	\ '🐞',
	\ '🦗',
	\ '🪳',
	\ '🕷',
	\ '🕸',
	\ '🦂',
	\ '🦟',
	\ '🪰',
	\ '🦠',
	\ '💐',
	\ '🌸',
	\ '💮',
	\ '🏵',
	\ '🌹',
	\ '🥀',
	\ '🌺',
	\ '🌻',
	\ '🌼',
	\ '🌷',
	\ '🌱',
	\ '🪴',
	\ '🌲',
	\ '🌳',
	\ '🌴',
	\ '🌵',
	\ '🌾',
	\ '🌿',
	\ '🍀',
	\ '🍁',
	\ '🍂',
	\ '🍃',
	\ '🍄',
	\ '🍇',
	\ '🍈',
	\ '🍉',
	\ '🍊',
	\ '🍋',
	\ '🍌',
	\ '🍍',
	\ '🥭',
	\ '🍎',
	\ '🍏',
	\ '🍐',
	\ '🍑',
	\ '🍒',
	\ '🍓',
	\ '🫐',
	\ '🥝',
	\ '🍅',
	\ '🫒',
	\ '🥥',
	\ '🥑',
	\ '🍆',
	\ '🥔',
	\ '🥕',
	\ '🌽',
	\ '🌶',
	\ '🫑',
	\ '🥒',
	\ '🥬',
	\ '🥦',
	\ '🧄',
	\ '🧅',
	\ '🥜',
	\ '🌰',
	\ '🍞',
	\ '🥐',
	\ '🥖',
	\ '🫓',
	\ '🥨',
	\ '🥯',
	\ '🥞',
	\ '🧇',
	\ '🧀',
	\ '🍖',
	\ '🍗',
	\ '🥩',
	\ '🥓',
	\ '🍔',
	\ '🍟',
	\ '🍕',
	\ '🌭',
	\ '🥪',
	\ '🌮',
	\ '🌯',
	\ '🫔',
	\ '🥙',
	\ '🧆',
	\ '🥚',
	\ '🍳',
	\ '🥘',
	\ '🍲',
	\ '🫕',
	\ '🥣',
	\ '🥗',
	\ '🍿',
	\ '🧈',
	\ '🧂',
	\ '🥫',
	\ '🍱',
	\ '🍘',
	\ '🍙',
	\ '🍚',
	\ '🍛',
	\ '🍜',
	\ '🍝',
	\ '🍠',
	\ '🍢',
	\ '🍣',
	\ '🍤',
	\ '🍥',
	\ '🥮',
	\ '🍡',
	\ '🥟',
	\ '🥠',
	\ '🥡',
	\ '🦀',
	\ '🦞',
	\ '🦐',
	\ '🦑',
	\ '🦪',
	\ '🍦',
	\ '🍧',
	\ '🍨',
	\ '🍩',
	\ '🍪',
	\ '🎂',
	\ '🍰',
	\ '🧁',
	\ '🥧',
	\ '🍫',
	\ '🍬',
	\ '🍭',
	\ '🍮',
	\ '🍯',
	\ '🍼',
	\ '🥛',
	\ '☕',
	\ '🫖',
	\ '🍵',
	\ '🍶',
	\ '🍾',
	\ '🍷',
	\ '🍸',
	\ '🍹',
	\ '🍺',
	\ '🍻',
	\ '🥂',
	\ '🥃',
	\ '🥤',
	\ '🧋',
	\ '🧃',
	\ '🧉',
	\ '🧊',
	\ '🥢',
	\ '🍽',
	\ '🍴',
	\ '🥄',
	\ '🔪',
	\ '🏺',
	\ '🌍',
	\ '🌎',
	\ '🌏',
	\ '🌐',
	\ '🗺',
	\ '🗾',
	\ '🧭',
	\ '🏔',
	\ '⛰',
	\ '🌋',
	\ '🗻',
	\ '🏕',
	\ '🏖',
	\ '🏜',
	\ '🏝',
	\ '🏞',
	\ '🏟',
	\ '🏛',
	\ '🏗',
	\ '🧱',
	\ '🪨',
	\ '🪵',
	\ '🛖',
	\ '🏘',
	\ '🏚',
	\ '🏠',
	\ '🏡',
	\ '🏢',
	\ '🏣',
	\ '🏤',
	\ '🏥',
	\ '🏦',
	\ '🏨',
	\ '🏩',
	\ '🏪',
	\ '🏫',
	\ '🏬',
	\ '🏭',
	\ '🏯',
	\ '🏰',
	\ '💒',
	\ '🗼',
	\ '🗽',
	\ '⛪',
	\ '🕌',
	\ '🛕',
	\ '🕍',
	\ '⛩',
	\ '🕋',
	\ '⛲',
	\ '⛺',
	\ '🌁',
	\ '🌃',
	\ '🏙',
	\ '🌄',
	\ '🌅',
	\ '🌆',
	\ '🌇',
	\ '🌉',
	\ '♨',
	\ '🎠',
	\ '🎡',
	\ '🎢',
	\ '💈',
	\ '🎪',
	\ '🚂',
	\ '🚃',
	\ '🚄',
	\ '🚅',
	\ '🚆',
	\ '🚇',
	\ '🚈',
	\ '🚉',
	\ '🚊',
	\ '🚝',
	\ '🚞',
	\ '🚋',
	\ '🚌',
	\ '🚍',
	\ '🚎',
	\ '🚐',
	\ '🚑',
	\ '🚒',
	\ '🚓',
	\ '🚔',
	\ '🚕',
	\ '🚖',
	\ '🚗',
	\ '🚘',
	\ '🚙',
	\ '🛻',
	\ '🚚',
	\ '🚛',
	\ '🚜',
	\ '🏎',
	\ '🏍',
	\ '🛵',
	\ '🦽',
	\ '🦼',
	\ '🛺',
	\ '🚲',
	\ '🛴',
	\ '🛹',
	\ '🛼',
	\ '🚏',
	\ '🛣',
	\ '🛤',
	\ '🛢',
	\ '⛽',
	\ '🚨',
	\ '🚥',
	\ '🚦',
	\ '🛑',
	\ '🚧',
	\ '⚓',
	\ '⛵',
	\ '🛶',
	\ '🚤',
	\ '🛳',
	\ '⛴',
	\ '🛥',
	\ '🚢',
	\ '🛩',
	\ '🛫',
	\ '🛬',
	\ '🪂',
	\ '💺',
	\ '🚁',
	\ '🚟',
	\ '🚠',
	\ '🚡',
	\ '🛰',
	\ '🚀',
	\ '🛸',
	\ '🛎',
	\ '🧳',
	\ '⌛',
	\ '⏳',
	\ '⌚',
	\ '⏰',
	\ '🕰',
	\ '🕛',
	\ '🕧',
	\ '🕐',
	\ '🕜',
	\ '🕑',
	\ '🕝',
	\ '🕒',
	\ '🕞',
	\ '🕓',
	\ '🕟',
	\ '🕔',
	\ '🕠',
	\ '🕕',
	\ '🕡',
	\ '🕖',
	\ '🕢',
	\ '🕗',
	\ '🕣',
	\ '🕘',
	\ '🕤',
	\ '🕙',
	\ '🕥',
	\ '🕚',
	\ '🕦',
	\ '🌑',
	\ '🌒',
	\ '🌓',
	\ '🌔',
	\ '🌕',
	\ '🌖',
	\ '🌗',
	\ '🌘',
	\ '🌙',
	\ '🌚',
	\ '🌛',
	\ '🌜',
	\ '🌡',
	\ '☀',
	\ '🌝',
	\ '🌞',
	\ '🪐',
	\ '⭐',
	\ '🌟',
	\ '🌠',
	\ '🌌',
	\ '☁',
	\ '⛅',
	\ '⛈',
	\ '🌤',
	\ '🌥',
	\ '🌦',
	\ '🌧',
	\ '🌨',
	\ '🌩',
	\ '🌪',
	\ '🌫',
	\ '🌀',
	\ '🌈',
	\ '🌂',
	\ '☂',
	\ '☔',
	\ '⛱',
	\ '⚡',
	\ '❄',
	\ '☃',
	\ '⛄',
	\ '☄',
	\ '🔥',
	\ '💧',
	\ '🌊',
	\ '🎃',
	\ '🎄',
	\ '🎆',
	\ '🎇',
	\ '🧨',
	\ '✨',
	\ '🎈',
	\ '🎉',
	\ '🎊',
	\ '🎋',
	\ '🎍',
	\ '🎎',
	\ '🎏',
	\ '🎐',
	\ '🎑',
	\ '🧧',
	\ '🎀',
	\ '🎁',
	\ '🎗',
	\ '🎟',
	\ '🎫',
	\ '🎖',
	\ '🏆',
	\ '🏅',
	\ '🥇',
	\ '🥈',
	\ '🥉',
	\ '⚽',
	\ '⚾',
	\ '🥎',
	\ '🏀',
	\ '🏐',
	\ '🏈',
	\ '🏉',
	\ '🎾',
	\ '🥏',
	\ '🎳',
	\ '🏏',
	\ '🏑',
	\ '🏒',
	\ '🥍',
	\ '🏓',
	\ '🏸',
	\ '🥊',
	\ '🥋',
	\ '🥅',
	\ '⛳',
	\ '⛸',
	\ '🎣',
	\ '🤿',
	\ '🎽',
	\ '🎿',
	\ '🛷',
	\ '🥌',
	\ '🎯',
	\ '🪀',
	\ '🪁',
	\ '🔫',
	\ '🎱',
	\ '🔮',
	\ '🪄',
	\ '🎮',
	\ '🕹',
	\ '🎰',
	\ '🎲',
	\ '🧩',
	\ '🧸',
	\ '🪅',
	\ '🪆',
	\ '🃏',
	\ '🀄',
	\ '🎴',
	\ '🎭',
	\ '🖼',
	\ '🎨',
	\ '🧵',
	\ '🪡',
	\ '🧶',
	\ '🪢',
	\ '👓',
	\ '🕶',
	\ '🥽',
	\ '🥼',
	\ '🦺',
	\ '👔',
	\ '👕',
	\ '👖',
	\ '🧣',
	\ '🧤',
	\ '🧥',
	\ '👗',
	\ '👘',
	\ '🥻',
	\ '🩱',
	\ '👚',
	\ '👛',
	\ '👜',
	\ '👝',
	\ '🛍',
	\ '🎒',
	\ '🩴',
	\ '👞',
	\ '👟',
	\ '🥾',
	\ '🥿',
	\ '👠',
	\ '👡',
	\ '🩰',
	\ '👢',
	\ '👑',
	\ '👒',
	\ '🎩',
	\ '🎓',
	\ '🧢',
	\ '🪖',
	\ '📿',
	\ '💄',
	\ '💍',
	\ '💎',
	\ '🔇',
	\ '🔈',
	\ '🔉',
	\ '🔊',
	\ '📢',
	\ '📣',
	\ '📯',
	\ '🔔',
	\ '🔕',
	\ '🎼',
	\ '🎵',
	\ '🎶',
	\ '🎙',
	\ '🎚',
	\ '🎛',
	\ '🎤',
	\ '🎧',
	\ '📻',
	\ '🎷',
	\ '🪗',
	\ '🎸',
	\ '🎹',
	\ '🎺',
	\ '🎻',
	\ '🪕',
	\ '🥁',
	\ '🪘',
	\ '📱',
	\ '📲',
	\ '☎',
	\ '📞',
	\ '📟',
	\ '📠',
	\ '🔋',
	\ '🔌',
	\ '💻',
	\ '🖥',
	\ '🖨',
	\ '⌨',
	\ '🖱',
	\ '🖲',
	\ '💽',
	\ '💾',
	\ '💿',
	\ '📀',
	\ '🧮',
	\ '🎥',
	\ '🎞',
	\ '📽',
	\ '🎬',
	\ '📺',
	\ '📷',
	\ '📸',
	\ '📹',
	\ '📼',
	\ '🔍',
	\ '🔎',
	\ '🕯',
	\ '💡',
	\ '🔦',
	\ '🏮',
	\ '🪔',
	\ '📔',
	\ '📕',
	\ '📖',
	\ '📗',
	\ '📘',
	\ '📙',
	\ '📚',
	\ '📓',
	\ '📒',
	\ '📃',
	\ '📜',
	\ '📄',
	\ '📰',
	\ '🗞',
	\ '📑',
	\ '🔖',
	\ '🏷',
	\ '💰',
	\ '🪙',
	\ '💴',
	\ '💵',
	\ '💶',
	\ '💷',
	\ '💸',
	\ '💳',
	\ '🧾',
	\ '💹',
	\ '✉',
	\ '📧',
	\ '📨',
	\ '📩',
	\ '📤',
	\ '📥',
	\ '📦',
	\ '📫',
	\ '📪',
	\ '📬',
	\ '📭',
	\ '📮',
	\ '🗳',
	\ '✏',
	\ '✒',
	\ '🖋',
	\ '🖊',
	\ '🖌',
	\ '🖍',
	\ '📝',
	\ '💼',
	\ '📁',
	\ '📂',
	\ '🗂',
	\ '📅',
	\ '📆',
	\ '🗒',
	\ '🗓',
	\ '📇',
	\ '📈',
	\ '📉',
	\ '📊',
	\ '📋',
	\ '📌',
	\ '📍',
	\ '📎',
	\ '🖇',
	\ '📏',
	\ '📐',
	\ '✂',
	\ '🗃',
	\ '🗄',
	\ '🗑',
	\ '🔒',
	\ '🔓',
	\ '🔏',
	\ '🔐',
	\ '🔑',
	\ '🗝',
	\ '🔨',
	\ '🪓',
	\ '⛏',
	\ '⚒',
	\ '🛠',
	\ '🗡',
	\ '⚔',
	\ '💣',
	\ '🪃',
	\ '🏹',
	\ '🛡',
	\ '🪚',
	\ '🔧',
	\ '🪛',
	\ '🔩',
	\ '⚙',
	\ '🗜',
	\ '⚖',
	\ '🦯',
	\ '🔗',
	\ '⛓',
	\ '🪝',
	\ '🧰',
	\ '🧲',
	\ '🪜',
	\ '⚗',
	\ '🧪',
	\ '🧫',
	\ '🧬',
	\ '🔬',
	\ '🔭',
	\ '📡',
	\ '💉',
	\ '🩸',
	\ '💊',
	\ '🩹',
	\ '🩺',
	\ '🚪',
	\ '🪞',
	\ '🪟',
	\ '🛏',
	\ '🛋',
	\ '🪑',
	\ '🚽',
	\ '🪠',
	\ '🚿',
	\ '🛁',
	\ '🪤',
	\ '🪒',
	\ '🧴',
	\ '🧷',
	\ '🧹',
	\ '🧺',
	\ '🧻',
	\ '🪣',
	\ '🧼',
	\ '🪥',
	\ '🧽',
	\ '🧯',
	\ '🛒',
	\ '🚬',
	\ '🧿',
	\ '🗿',
	\ '🪧',
	\ '🚰',
	\ '🚸',
	\ '🔅',
	\ '🔆',
	\ '🔱',
	\ '🔰',
	\ '💠',
	\ '🔘',
	\ '🏁',
	\ '🚩',
	\ '🌈'
	\ ]

let s:emoji_list_length = 852

" Pick a random emoji from the list.
function! prr_ui#RandomEmoji()
	let l:index =  rand() % s:emoji_list_length
	return s:emoji[l:index]
endfunction


let s:prr_path = ''

function! prr_ui#Start()
	let s:prr_path = system('prr-start --print')
	return s:prr_path
endfunction

function! prr_ui#StartInteractive()
	let prr_path = prr_ui#Start()
	execute 'vsplit ' . prr_path
endfunction

function! prr_ui#Submit()
	update

	!prr-submit
endfunction


" Comment on the current line.
function! prr_ui#Comment()
	let current_line = getline('.')

	call prr_ui#SplitPrrBuffer()

	call search(current_line)

	" Put the cursor in place to add a comment on the line.
	call append('.', ['', '', ''])
	call cursor(line('.') + 2, 0)

	startinsert
endfunction


function! prr_ui#Approve()
	" If current buffer is not prr, then PrrStart.
	if !prr_ui#IsCurrentBufferPrr()
		call prr_ui#SplitPrrBuffer()
	endif

	call append(
		\ 0,
		\ [
			\ 'Looks good ' . prr_ui#RandomEmoji(),
			\ '',
			\ '@prr approve',
			\ ''
		\ ]
	\ )
	call cursor(1, 0)
endfunction

function! prr_ui#Reject()
	if !prr_ui#IsCurrentBufferPrr()
		call prr_ui#SplitPrrBuffer()
	endif

	call append(
		\ 0,
		\ [
			\ '',
			\ '',
			\ '@prr reject',
			\ ''
		\ ]
	\ )
	call cursor(1, 0)
endfunction


function! prr_ui#SplitPrrBuffer()
	try
		" Open the existing Prr review file in a new split.
		sbuffer prr
	catch
		let prr_path = prr_ui#Start()
		execute 'split ' . prr_path
	endtry

endfunction

function! prr_ui#IsCurrentBufferPrr()
	let current_buffer_name = bufname()
	let pos = match(current_buffer_name, '\.prr$')

	return pos != -1
endfunction
